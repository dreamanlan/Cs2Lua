require "cs2lua__namespaces"; 

Test = {
	-------------------------------
	-------- class methods --------
	-------------------------------
	__new_object = function(...)
		local __cs2dsl_newobj;
		__cs2dsl_newobj = newobject(Test, nil, nil, "ctor", 0, nil, ...);
		return __cs2dsl_newobj;
	end,

	ToList = function(T, enumer)
		local __cs2lua_func_info = luainitialize();
		local __retval_0, __retval_1 = luapcall(Test.__ori_ToList, __cs2lua_func_info, T, enumer);
		__cs2lua_func_info = luafinalize(__cs2lua_func_info);
		if not __retval_0 then
			lualog("{0}", __retval_1);
			__retval_1 = nil;
		end;
		return __retval_1;
	end,
	__ori_ToList = function(__cs2lua_func_info, T, enumer)
		local __method_ret_282_4_290_5;
		this:LoadStartupView_FGUI("", "", "", 0, false);
		local r;
		r = newexternlist(System.Collections.Generic.List_T, buildglobalinfoonce("g_System_Collections_Generic_List_T_TypeArgs", getglobalinfo("g_System_Collections_Generic_List_T_TypeArgs") or {T}), buildglobalinfoonce("g_System_Collections_Generic_List_T_TypeKinds", getglobalinfo("g_System_Collections_Generic_List_T_TypeKinds") or {TypeKind.TypeParameter}), "ctor", 0, {});
		local __foreach_286_8_288_9 = newiterator(__cs2lua_func_info, enumer, System.Collections.Generic.IEnumerable_T, System.Collections.Generic.IEnumerable_T, true);
		for v in getiterator(__foreach_286_8_288_9) do
			if v == __cs2lua_nil then
				v = nil;
			end;
			r:Add(v);
		end;
		recycleiterator(__cs2lua_func_info, __foreach_286_8_288_9);
		__method_ret_282_4_290_5 = r;
		return __method_ret_282_4_290_5;
	end,

	ToArray = function(T, list)
		local __method_ret_291_4_296_5;
		local arr;
		arr = newarraydim1(T, TypeKind.TypeParameter, nil, list.Count);
		list:CopyTo(arr, 0);
		__method_ret_291_4_296_5 = arr;
		return __method_ret_291_4_296_5;
	end,

	cctor = function()
		Test.__cctor();
	end,

	__cctor = function()
		if Test.__cctor_called then 
			return;
		else
			Test.__cctor_called = true;
		end;
	end,

	-------------------------------
	-------- class fields --------
	-------------------------------
	__cctor_called = false,

	-------------------------------
	--- define class and object ---
	-------------------------------
	__define_class = function()
		Utility.Warn("Test::__define_class begin");

		local class = Test;

		local raw_obj_methods = {
			get_Item = function(this, ...)
				local __cs2lua_func_info = luainitialize();
				local __retval_0, __retval_1 = luapcall(this.__ori_get_Item, this, __cs2lua_func_info, ...);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
				if not __retval_0 then
					lualog("{0}", __retval_1);
					__retval_1 = defaultvalue(System.Nullable_T, "System.Nullable_T", true);
				end;
				return __retval_1;
			end,
			__ori_get_Item = function(this, __cs2lua_func_info, ...)
				local __method_ret_185_4_189_5;
				local args;
				args = wrapparams({...}, System.Nullable_T, TypeKind.Struct);
				local args;
				args = wrapparams({...}, System.Nullable_T, TypeKind.Struct);
				__method_ret_185_4_189_5 = arraygetstruct(false, SymbolKind.Parameter, System.Nullable_T, args, 1, 1);
				movetocallerfuncinfo(__cs2lua_func_info, System.Nullable_T, __method_ret_185_4_189_5);
				return __method_ret_185_4_189_5;
			end,

			set_Item = function(this, ...)
				local __cs2lua_func_info = luainitialize();
				luapcall(this.__ori_set_Item, this, __cs2lua_func_info, ...);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
			end,
			__ori_set_Item = function(this, __cs2lua_func_info, ...)
				local args;
				args = wrapparams({...}, System.Nullable_T, TypeKind.Struct);
				local args;
				args = wrapparams({...}, System.Nullable_T, TypeKind.Struct);
				local value;
				value = table.remove(args);
				arraysetstruct(false, SymbolKind.Parameter, System.Nullable_T, args, 2, 1, wrapstruct(value, System.Nullable_T));
			end,

			Init = function(this)
				local __cs2lua_func_info = luainitialize();
				luapcall(this.__ori_Init, this, __cs2lua_func_info);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
			end,
			__ori_Init = function(this, __cs2lua_func_info)
				local items;
				items = wraparray({"ȫ��", "������", "�ɽ�ȡ", "�����", "δ��ȡ"}, nil, System.String, TypeKind.Class);
				this.m_DataChangeCallBackInfoPool:Init__Int32__Func_1_T__Action_1_T(32, function()
					local __method_ret_193_46_193_92;
					__method_ret_193_46_193_92 = newobject(DataChangeCallBackInfo, nil, nil, "ctor", 0, nil);
					return __method_ret_193_46_193_92;
				end, function(v)
				end);
				local strlist;
				strlist = newlist(StrList, nil, nil, "ctor", 0, {});
				strlist:Add(System.String.Empty);
				strlist:Sort__Comparison_1_T(function(a, b)
					local __lambda_196_21_196_45;
					__lambda_196_21_196_45 = invokeforbasicvalue(a, false, System.String, "CompareTo__String", b);
					return __lambda_196_21_196_45;
				end);
				local intlist;
				intlist = newexternlist(System.Collections.Generic.List_T, buildglobalinfoonce("g_System_Collections_Generic_List_System_Int32_TypeArgs", getglobalinfo("g_System_Collections_Generic_List_System_Int32_TypeArgs") or {System.Int32}), buildglobalinfoonce("g_System_Collections_Generic_List_System_Int32_TypeKinds", getglobalinfo("g_System_Collections_Generic_List_System_Int32_TypeKinds") or {TypeKind.Struct}), "ctor", 0, {});
				intlist:Add(1);
				local sa;
				sa = getexterninstanceindexer(System.String, TypeKind.Class, StrList, strlist, System.Collections.Generic.List_T, "get_Item", 1, 0);
				intlist:Sort__Comparison_1_T(function(a, b)
					local __lambda_200_21_200_45;
					__lambda_200_21_200_45 = invokeforbasicvalue(a, false, System.Int32, "CompareTo__Int32", b);
					return __lambda_200_21_200_45;
				end);
				local iaa;
				if (not isequal(nil, strlist)) then iaa = strlist.Count else iaa = intlist.Count end;
				local aa;
				aa = wraparray({1, 2, 3, 4, 5}, nil, System.Int32, TypeKind.Struct);
				local bb;
				bb = wraparray({wraparray({1, 2}, nil, System.Int32, TypeKind.Struct), wraparray({3, 4}, nil, System.Int32, TypeKind.Struct), wraparray({5, 6}, nil, System.Int32, TypeKind.Struct)}, nil, System.Int32, TypeKind.Struct);
				local ia;
				ia = bb[1][2];
				local __foreach_exp_205_8_207_9 = strlist;
				for __foreach_ix_205_8_207_9 = 0, __foreach_exp_205_8_207_9.Count - 1 do
					s = getexterninstanceindexer(System.String, TypeKind.Class, StrList, __foreach_exp_205_8_207_9, System.Collections.Generic.List_T, "get_Item", 1, __foreach_ix_205_8_207_9);
					System.Console.WriteLine__String(s);
				end;
				local __foreach_exp_208_8_210_9 = aa;
				for __foreach_ix_208_8_210_9 = 1, __foreach_exp_208_8_210_9.Length do
					v = __foreach_exp_208_8_210_9[__foreach_ix_208_8_210_9];
					System.Console.WriteLine__Int32(v);
				end;
				local __foreach_exp_211_8_213_9 = bb;
				for __foreach_ix_211_8_213_9_0 = 1, __foreach_exp_211_8_213_9:GetLength(0) do
				for __foreach_ix_211_8_213_9_1 = 1, __foreach_exp_211_8_213_9:GetLength(1) do
					v = __foreach_exp_211_8_213_9[__foreach_ix_211_8_213_9];
					System.Console.WriteLine__Int32(v);
				end;
				end;
				local act;
				act = typecast((function()
					System.Console.Write__Int32(ia);
				end), "System.Action", TypeKind.Delegate);
				local cc;
				cc = Test.ToList(System.Int32, aa);
				local v3list;
				v3list = newexternlist(System.Collections.Generic.List_T, buildglobalinfoonce("g_System_Collections_Generic_List_UnityEngine_Vector3_TypeArgs", getglobalinfo("g_System_Collections_Generic_List_UnityEngine_Vector3_TypeArgs") or {UnityEngine.Vector3}), buildglobalinfoonce("g_System_Collections_Generic_List_UnityEngine_Vector3_TypeKinds", getglobalinfo("g_System_Collections_Generic_List_UnityEngine_Vector3_TypeKinds") or {TypeKind.Struct}), "ctor", 0, {});
				call_ilist_add_vector3(__cs2lua_func_info, v3list, System.Collections.Generic.List_T, "Add", get_vector3_zero(__cs2lua_func_info));
				local nv3list;
				nv3list = newlist(Vector3List, nil, nil, "ctor", 0, {});
				nv3list:Add(get_vector3_zero(__cs2lua_func_info));
				local v3;
				v3 = getinstanceindexerstruct(true, UnityEngine.Vector3, Vector3List, nv3list, System.Collections.Generic.List_T, "get_Item", 1, 0);
				v3 = wrap_vector3(__cs2lua_func_info, v3);
				set_instance_indexer_vector3(__cs2lua_func_info, true, UnityEngine.Vector3, Vector3List, nv3list, System.Collections.Generic.List_T, "set_Item", 2, 0, v3);
				local vv3;
				vv3 = arraygetstruct(false, SymbolKind.Method, UnityEngine.Vector3, Test.ToArray(UnityEngine.Vector3, nv3list), 1, 1);
				vv3 = wrap_vector3(__cs2lua_func_info, vv3);
				set_array_vector3(__cs2lua_func_info, Test.ToArray(UnityEngine.Vector3, nv3list), 1, wrapstruct(vv3, UnityEngine.Vector3));
			end,

			testcall = function(this)
				local __cs2lua_func_info = luainitialize();
				local __retval_0, __retval_1 = luapcall(this.__ori_testcall, this, __cs2lua_func_info);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
				if not __retval_0 then
					lualog("{0}", __retval_1);
					__retval_1 = 0;
				end;
				return __retval_1;
			end,
			__ori_testcall = function(this, __cs2lua_func_info)
				local __method_ret_225_4_233_5;
				set_array_vector3(__cs2lua_func_info, this.m_Vs, 1, get_vector3_zero(__cs2lua_func_info));
				local v;
				v = arraygetstruct(false, SymbolKind.Field, UnityEngine.Vector3, this.m_Vs, 1, 1);
				v = wrap_vector3(__cs2lua_func_info, v);
				local dict;
				dict = newdictionary(StrStrDict, nil, nil, "ctor", 0, {});
				dict:Add(luastrtocsstr("1"), luastrtocsstr("2"));
				dict:Remove(luastrtocsstr("1"));
				__method_ret_225_4_233_5 = 1;
				return __method_ret_225_4_233_5;
			end,

			test = function(this)
				local __method_ret_234_4_270_5;
				local a;
				a = 2;
				local b;
				b = 0;
				local c;
				c = 1;
				local aa;
				aa = function()
					local __method_ret_237_31_250_9;
					local __try_ret_238_12_243_13, __try_retval_238_12_243_13;
					__try_ret_238_12_243_13,__try_retval_238_12_243_13 = luatry(System.Console.Write__String, luastrtocsstr("test"));
					local __catch_handled_238_12_243_13, __catch_retval_238_12_243_13;
					__catch_handled_238_12_243_13 = false;
					__catch_retval_238_12_243_13 = luacatch(__catch_handled_238_12_243_13, __try_retval_238_12_243_13, (not __try_ret_238_12_243_13) and function(ex)
						__catch_handled_238_12_243_13 = true;
					end);
					local __try_ret_244_12_249_13, __try_retval_244_12_249_13;
					__try_ret_244_12_249_13,__try_retval_244_12_249_13 = luatry(nil);
				repeat
					do
						__method_ret_237_31_250_9 = lualib_call(2, {nil}, this, Test, "testcall");
						__try_retval_244_12_249_13 = 1;
						break;
					end;
				until true;
					if __try_ret_244_12_249_13 then 
						if __try_retval_244_12_249_13 then 
							if (__try_retval_244_12_249_13 == 1) then 
								return __method_ret_237_31_250_9;
							end;
						end;
					end;
					local __catch_handled_244_12_249_13, __catch_retval_244_12_249_13;
					__catch_handled_244_12_249_13 = false;
					__catch_retval_244_12_249_13 = luacatch(__catch_handled_244_12_249_13, __try_retval_244_12_249_13, (not __try_ret_244_12_249_13) and function(ex)
						__catch_handled_244_12_249_13 = true;
						do
							__method_ret_237_31_250_9 = 0;
							return 1;
						end;
					end);
					if __catch_retval_244_12_249_13 then 
						if (__catch_retval_244_12_249_13 == 1) then 
							return __method_ret_237_31_250_9;
						end;
					end;
					return nil;
				end;
				local __try_ret_252_8_257_9, __try_retval_252_8_257_9;
				__try_ret_252_8_257_9,__try_retval_252_8_257_9 = luatry(System.Console.Write__String, luastrtocsstr("test"));
				local __catch_handled_252_8_257_9, __catch_retval_252_8_257_9;
				__catch_handled_252_8_257_9 = false;
				__catch_retval_252_8_257_9 = luacatch(__catch_handled_252_8_257_9, __try_retval_252_8_257_9, (not __try_ret_252_8_257_9) and function(ex)
					__catch_handled_252_8_257_9 = true;
				end);
				local __try_ret_258_8_267_9, __try_retval_258_8_267_9;
				__try_ret_258_8_267_9,__try_retval_258_8_267_9,__method_ret_234_4_270_5 = luatry(aa);
				if __try_retval_258_8_267_9 then
					__method_ret_234_4_270_5 = __try_retval_258_8_267_9;
					__try_retval_258_8_267_9 = 1;
				end;
				if __try_ret_258_8_267_9 then 
					System.Console.WriteLine__String__Object__Object__Object(luastrtocsstr("{0} {1} {2}"), a, b, c);
					if __try_retval_258_8_267_9 then 
						if (__try_retval_258_8_267_9 == 1) then 
							return __method_ret_234_4_270_5;
						end;
					end;
				end;
				local __catch_handled_258_8_267_9, __catch_retval_258_8_267_9;
				__catch_handled_258_8_267_9 = false;
				__catch_retval_258_8_267_9 = luacatch(__catch_handled_258_8_267_9, __try_retval_258_8_267_9, (not __try_ret_258_8_267_9) and function(e)
					__catch_handled_258_8_267_9 = true;
					System.Console.WriteLine__String__Object__Object__Object(luastrtocsstr("ex:{0} {1} {2}"), a, b, c);
					do
						__method_ret_234_4_270_5 = 0;
						return 1;
					end;
				end);
				System.Console.WriteLine__String__Object__Object__Object(luastrtocsstr("{0} {1} {2}"), a, b, c);
				if __catch_retval_258_8_267_9 then 
					if (__catch_retval_258_8_267_9 == 1) then 
						return __method_ret_234_4_270_5;
					end;
				end;
				if (not __try_ret_258_8_267_9) then 
					System.Console.WriteLine__String__Object__Object__Object(luastrtocsstr("{0} {1} {2}"), a, b, c);
				end;
				if (a > 1) then this.m_IntVal = aa() else this.m_IntVal = c end;
				return __method_ret_234_4_270_5;
			end,

			LoadStartupView_FGUI = function(this, className, comName, packageName, grp, ForceShow)
				local __cs2lua_func_info = luainitialize();
				luapcall(this.__ori_LoadStartupView_FGUI, this, __cs2lua_func_info, className, comName, packageName, grp, ForceShow);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
			end,
			__ori_LoadStartupView_FGUI = function(this, __cs2lua_func_info, className, comName, packageName, grp, ForceShow)
				--
				local __unary_273_12_273_22 = this.m_IntVal; this.m_IntVal = (this.m_IntVal + 1);
				if (__unary_273_12_273_22 > 0) then

				end;
				--
				this.m_IntVal = (this.m_IntVal + 1);
				if (this.m_IntVal > 0) then

				end;
				local a;
				a = this.m_IntIntKeyValue:ToString();
				local abc;
				abc = newstruct(TestStruct, nil, nil, "ctor", 0, nil);
			end,

			ctor = function(this)
				this:__ctor();
			end,

			__ctor = function(this)
				local __cs2lua_func_info = luainitialize();
				luapcall(this.__ori___ctor, this, __cs2lua_func_info);
				__cs2lua_func_info = luafinalize(__cs2lua_func_info);
			end,
			__ori___ctor = function(this, __cs2lua_func_info)
				if this.__ctor_called then 
					return;
				else
					this.__ctor_called = true;
				end;
				this.m_DataChangeCallBackInfoPool = newobject(Cs2LuaObjectPoolEx_DataChangeCallBackInfo, buildglobalinfoonce("g_Cs2LuaObjectPoolEx_DataChangeCallBackInfo_TypeArgs", getglobalinfo("g_Cs2LuaObjectPoolEx_DataChangeCallBackInfo_TypeArgs") or {DataChangeCallBackInfo}), buildglobalinfoonce("g_Cs2LuaObjectPoolEx_DataChangeCallBackInfo_TypeKinds", getglobalinfo("g_Cs2LuaObjectPoolEx_DataChangeCallBackInfo_TypeKinds") or {TypeKind.Class}), "ctor", 0, nil);
				this.m_Vs = newarraydim1(UnityEngine.Vector3, TypeKind.Struct, defaultvalue(UnityEngine.Vector3, "UnityEngine.Vector3", true), 10);
				this.m_IntIntKeyValue = newobject(Cs2LuaKeyValuePair_System_Int32_System_Int32, buildglobalinfoonce("g_Cs2LuaKeyValuePair_System_Int32_System_Int32_TypeArgs", getglobalinfo("g_Cs2LuaKeyValuePair_System_Int32_System_Int32_TypeArgs") or {System.Int32, System.Int32}), buildglobalinfoonce("g_Cs2LuaKeyValuePair_System_Int32_System_Int32_TypeKinds", getglobalinfo("g_Cs2LuaKeyValuePair_System_Int32_System_Int32_TypeKinds") or {TypeKind.Struct, TypeKind.Struct}), "ctor", 0, nil);
			end,
		};
		local obj_methods = {
			get_Item = wrapinheritable("get_Item", raw_obj_methods.get_Item, Test),
			__self__get_Item = wrapinheritable("__self__get_Item", raw_obj_methods.get_Item, Test),
			get_Item = raw_obj_methods.get_Item,
			__ori_get_Item = raw_obj_methods.__ori_get_Item,
			set_Item = wrapinheritable("set_Item", raw_obj_methods.set_Item, Test),
			__self__set_Item = wrapinheritable("__self__set_Item", raw_obj_methods.set_Item, Test),
			set_Item = raw_obj_methods.set_Item,
			__ori_set_Item = raw_obj_methods.__ori_set_Item,
			Init = wrapinheritable("Init", raw_obj_methods.Init, Test),
			__self__Init = wrapinheritable("__self__Init", raw_obj_methods.Init, Test),
			Init = raw_obj_methods.Init,
			__ori_Init = raw_obj_methods.__ori_Init,
			testcall = wrapinheritable("testcall", raw_obj_methods.testcall, Test),
			__self__testcall = wrapinheritable("__self__testcall", raw_obj_methods.testcall, Test),
			testcall = raw_obj_methods.testcall,
			__ori_testcall = raw_obj_methods.__ori_testcall,
			test = wrapinheritable("test", raw_obj_methods.test, Test),
			__self__test = wrapinheritable("__self__test", raw_obj_methods.test, Test),
			test = raw_obj_methods.test,
			LoadStartupView_FGUI = wrapinheritable("LoadStartupView_FGUI", raw_obj_methods.LoadStartupView_FGUI, Test),
			__self__LoadStartupView_FGUI = wrapinheritable("__self__LoadStartupView_FGUI", raw_obj_methods.LoadStartupView_FGUI, Test),
			LoadStartupView_FGUI = raw_obj_methods.LoadStartupView_FGUI,
			__ori_LoadStartupView_FGUI = raw_obj_methods.__ori_LoadStartupView_FGUI,
			ctor = wrapinheritable("ctor", raw_obj_methods.ctor, Test),
			__self__ctor = wrapinheritable("__self__ctor", raw_obj_methods.ctor, Test),
			ctor = raw_obj_methods.ctor,
			__ctor = raw_obj_methods.__ctor,
			__ori___ctor = raw_obj_methods.__ori___ctor,
		};
		raw_obj_methods = nil;

		local obj_build = function()
			return {
				m_IntVal = 0,
				__ctor_called = false,
			};
		end;

		local __defineclass_return = defineclass(nil, "Test", "Test", class, obj_methods, obj_build, false);
		Utility.Warn("Test::__define_class end");
		return __defineclass_return;
	end,

	-------------------------------
	--------- fields info ---------
	-------------------------------
	__class_fields = {
		__cctor_called = true,
	},

	__obj_fields = {
		m_DataChangeCallBackInfoPool = true,
		m_IntVal = true,
		m_Vs = true,
		m_IntIntKeyValue = true,
		__ctor_called = true,
	},

	-------------------------------
	-------- metadata info --------
	-------------------------------
	__method_info = {
		ctor = {
			ctor = true,
		},
	},
};


require "cs2lua__syslib";
require "cs2lua__externenums";
require "cs2lua__interfaces";
require "datachangecallbackinfo";
require "strlist";
require "vector3list";
require "strstrdict";
require "teststruct";
require "cs2luaobjectpoolex_datachangecallbackinfo";
require "cs2luakeyvaluepair_system_int32_system_int32";
settempmetatable(Test);
